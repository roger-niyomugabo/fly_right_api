{
    "openapi": "3.0.0",
    "info": {
      "version": "1.0.0",
      "description": "FlyRight is an airline complaint system which provides customers with a simple and efficient way to report any issues they may encounter during their travel.",
      "title": "Fly Right"
    },
    "servers": [
        {
            "url": "http://localhost:3000/",
            "description": "Local server"
        },
        {
            "url": "https://tasty-bass-drawers.cyclic.app/",
            "description": "Deployed server"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "To authenticate, include a valid JWT token in the Authorization header using the Bearer scheme. Contact the API administrator to obtain a token."
            }
        },
        "responses": {
            "NotFound": {
                "description": "The specified resource was not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Resource not found"
                                }
                            }
                        }
                    }
                }
            },
            "BadRequest": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Bad Request"
                                }
                            }
                        }
                    }
                }
            },
            "UnauthorizedError": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Access token is missing or invalid"
                                }
                            }
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Forbidden"
                                }
                            }
                        }
                    }
                }
            },
            "ConflictError": {
                "description": "Resource exists",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Resource exists"
                                }
                            }
                        }
                    }
                }
            },
            "ValidationError": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Validation error"
                                }
                            }
                        }
                    }
                }
            },
            "ServerError": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Internal server error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "AdminSignup": {
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "securityQuestion",
                    "securityAnswer"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "your first name",
                        "example": "Roger"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "your last name",
                        "example": "NIYOMUGABO"
                    },
                    "email": {
                        "type": "string",
                        "description": "your email",
                        "example": "flyright.manager@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "your password",
                        "example": "Niyomugabo3"
                    },
                    "securityQuestion": {
                        "type": "string",
                        "description": "Security question",
                        "example": "what is your favorite color?"
                    },
                    "securityAnswer": {
                        "type": "string",
                        "description": "Security answer",
                        "example": "white"
                    }
                }
            },
            "Login": {
                "required": [
                    "email",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "your email",
                        "example": "flyright.manager@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "your password",
                        "example": "Niyomugabo3"
                    }
                }
            },
            "EmployeeSignup": {
                "required": [
                    "fullName",
                    "email",
                    "phoneNumber",
                    "jobTitle",
                    "address"
                ],
                "type": "object",
                "properties": {
                    "fullName": {
                        "type": "string",
                        "description": "full name",
                        "example": "Roger NIYOMUGABO"
                    },
                    "email": {
                        "type": "string",
                        "description": "email",
                        "example": "rogerniyomugabo5@gmail.com"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "phone number",
                        "example": "250782811462"
                    },
                    "jobTitle": {
                        "type": "string",
                        "description": "job title",
                        "example": "Customer Service Provider"
                    },
                    "address": {
                        "type": "string",
                        "description": "address",
                        "example": "Kigali, Gasabo"
                    }
                }
            },
            "Category": {
                "required": [
                    "category_name",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "category_name": {
                        "type": "string",
                        "description": "Category name",
                        "example": "Inflight"
                    },
                    "description": {
                        "type": "string",
                        "description": "A parent category id",
                        "example": "This category should include complaints from inside the plane"
                    }
                }
            },
            "ComplaintCategory": {
                "required": [
                    "category",
                    "parent_category"
                ],
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "compalint category name",
                        "example": "Food/Drinks"
                    },
                    "parent_category": {
                        "type": "string",
                        "description": "A parent category id",
                        "example": "645a70ffa24fddc7955c1c8f"
                    }
                }
            },
            "ComplaintDescription": {
                "required": [
                    "description",
                    "category"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "complaint description",
                        "example": "Unfulfilled special meal request"
                    },
                    "category": {
                        "type": "string",
                        "description": "complaint category id",
                        "example": "645a5e144d0ae5c3ba3c63c6"
                    }
                }
            },
            "ComplaintPreferredSolution": {
                "required": [
                    "preferredSolution",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "preferredSolution": {
                        "type": "string",
                        "description": "preferred complaint solution",
                        "example": "Provide an alternative meal that meets the specific dietary requirements"
                    },
                    "description": {
                        "type": "string",
                        "description": "complaint description id",
                        "example": "645a5fb69e873b782838935c"
                    }
                }
            },
            "Complaint": {
                "required": [
                    "category",
                    "description",
                    "preferredSolution",
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "complaint category",
                        "example": "645a737285e472388391af63"
                    },
                    "description": {
                        "type": "string",
                        "description": "complaint description",
                        "example": "645a737285e472388391af63"
                    },
                    "preferredSolution": {
                        "type": "string",
                        "description": "complaint preferred solution",
                        "example": "645a737285e472388391af63"
                    },
                    "additionalEvidence": {
                        "type": "file",
                        "description": "additional evidence"
                    },
                    "comment": {
                        "type": "string",
                        "description": "complaint preferred solution",
                        "example": "The plane is to old to be transporting people around! Please do something"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "admin",
            "description": "Admin Endpoints"
        },
        {
            "name": "employee",
            "description": "Employee Endpoints"
        },
        {
            "name": "category",
            "description": "Category Endpoints"
        },
        {
            "name": "complaint",
            "description": "compalint Endpoints"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "paths": {
        "/api/admin/signup": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin signup",
                "description": "Admin can create an account",
                "requestBody": {
                    "required": "true",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminSignup"
                            }
                        }
                    }
                },
                "responses": {
                    "201" : {
                        "description": "Signed up successfully"
                    },
                    "409" : {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "422" : {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },
        
        "/api/admin/login": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin login",
                "description": "Admin can login into his account using email and password",
                "requestBody": {
                    "required": "true",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "200" : {
                        "description": "Logged in successfully"
                    },
                    "400" : {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404" : {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422" : {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/employee/signup": {
            "post": {
                "tags": [
                    "employee"
                ],
                "summary": "Employee signup",
                "description": "Admin can register an employee",
                "requestBody": {
                    "required": "true",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeeSignup"
                            }
                        }
                    }
                },
                "responses": {
                    "201" : {
                        "description": "Signed up successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "409" : {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "422" : {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/employee/login": {
            "post": {
                "tags": [
                    "employee"
                ],
                "summary": "Employee login",
                "description": "Employee can login into his account using email and password",
                "requestBody": {
                    "required": "true",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "200" : {
                        "description": "Logged in successfully"
                    },
                    "400" : {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404" : {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422" : {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/employee/{_id}": {
            "get": {
                "tags": [
                    "employee"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "required": "true",
                        "description": "Id of an employee to get a single employee",
                        "schema": {
                            "type": "string"
                        },
                        "example": "64350d4bc108e79aac3fcf54"
                    }
                ],
                "summary": "Get single employee",
                "description": "Admin can get a single employee",
                "responses": {
                    "200" : {
                        "description": "Employee retrieved!"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/employee/delete/{id}": {
            "delete": {
                "tags": [
                    "employee"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": "true",
                        "description": "Id of an employee to delete",
                        "schema": {
                            "type": "string"
                        },
                        "example": "64350d4bc108e79aac3fcf54"
                    }
                ],
                "summary": "Delete employee",
                "description": "Admin can delete/remove an employee",
                "responses": {
                    "200" : {
                        "description": "Employee deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/employee/all": {
            "get": {
                "tags": [
                    "employee"
                ],
                "summary": "Get all employees",
                "description": "Admin can get all employees",
                "responses": {
                    "200" : {
                        "description": "Employees retrieved!"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/category/create": {
            "post": {
                "tags": [
                    "category"
                ],
                "summary": "A complaint category",
                "description": "",
                "requestBody": {
                    "required": "true",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "201" : {
                        "description": "Category created successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "409" : {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "422" : {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/complaintcategory/create": {
            "post": {
                "tags": [
                    "complaint"
                ],
                "summary": "A complaint category",
                "description": "",
                "requestBody": {
                    "required": "true",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ComplaintCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "201" : {
                        "description": "Category created successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "409" : {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "422" : {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/description/create": {
            "post": {
                "tags": [
                    "complaint"
                ],
                "summary": "A complaint description",
                "description": "",
                "requestBody": {
                    "required": "true",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ComplaintDescription"
                            }
                        }
                    }
                },
                "responses": {
                    "201" : {
                        "description": "Complaint description added successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "409" : {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "422" : {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/solution/create": {
            "post": {
                "tags": [
                    "complaint"
                ],
                "summary": "A preferred complaint solution",
                "description": "",
                "requestBody": {
                    "required": "true",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ComplaintPreferredSolution"
                            }
                        }
                    }
                },
                "responses": {
                    "201" : {
                        "description": "Preferred solution added successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "409" : {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "422" : {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/complaint/": {
            "post": {
                "tags": [
                    "complaint"
                ],
                "summary": "Flight ticket number",
                "description": "Passenger enters a valid ticket number to be able to file a complaint",
                "requestBody": {
                    "required": "true",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ticketNumber"
                                ],
                                "type": "object",
                                "properties": {
                                    "ticketNumber": {
                                        "type": "string",
                                        "description": "flight ticket number",
                                        "example": "DEF123456789-X"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200" : {
                        "description": "Proceed with filing complaint!"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422" : {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/complaint/create": {
            "post": {
                "tags": [
                    "complaint"
                ],
                "summary": "Inflight or Outflight complaint",
                "description": "Passenger can file an inflight/outflight complaint. Only done when you have first provided a valid ticket number",
                "requestBody": {
                    "required": "true",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Complaint"
                            }
                        }
                    }
                },
                "responses": {
                    "201" : {
                        "description": "Your complaint has been sent successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref":"#/components/responses/Forbidden"
                    },
                    "409" : {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "422" : {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },

        "/api/description/{_id}/preferredsolutions": {
            "get": {
                "tags": [
                    "complaint"
                ],
                "parameters": [
                        {
                        "name": "_id",
                        "in": "path",
                        "required": "true",
                        "description": "Description id",
                        "schema": {
                            "type": "string"
                        },
                        "example": "645a5fb69e873b782838935c"
                    }
                ],
                "summary": "Get all preferred solutions",
                "description": "Get all preferred solutions based on the selected complaint description",
                "responses": {
                    "200" : {
                        "description": "Complaint preferred slutions retrieved successfully"
                    },
                    "500" : {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        }
    }
}
